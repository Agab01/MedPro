package medPro.DAO;

import medPro.database.Conexao;
import medPro.model.*;

import java.sql.*;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

public class ConsultaDAO {

    // Inserir
    public void salvar(Consulta consulta) {
        String sql = "INSERT INTO Consulta (data_Consulta, horario_Consulta, matricula_Atendente, crm_Medico, cpf_Paciente) VALUES (?, ?, ?, ?, ?)";

        try (Connection conn = Conexao.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {

            stmt.setString(1, consulta.getDataConsulta());
            stmt.setTime(2, Time.valueOf(consulta.getHoraConsulta()));
            stmt.setInt(3, consulta.getMatriculaAtendenteConsulta());
            stmt.setString(4, consulta.getCrmMedicoConsulta());
            stmt.setString(5, consulta.getCpfPacienteConsulta());

            stmt.executeUpdate();

            // Recupera o ID gerado
            ResultSet rs = stmt.getGeneratedKeys();
            if (rs.next()) {
                consulta.setIdConsulta(rs.getInt(1));
            }

            System.out.println("Consulta inserida com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao inserir consulta: " + e.getMessage());
        }
    }

    // Listar todas
    public List<Consulta> listarTodas() {
        List<Consulta> lista = new ArrayList<>();
        String sql = "SELECT * FROM Consulta";

        try (Connection conn = Conexao.conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                String data = rs.getString("data_Consulta");
                LocalTime hora = rs.getTime("hora_Consulta").toLocalTime();   
                int atendente = rs.getInt("matricula_Atendente");
                String medico =rs.getString("crm_Medico");
                String paciente = rs.getString("cpf_Paciente");

                Consulta consulta = new Consulta(data, hora, atendente, medico, paciente);
                lista.add(consulta);
            }

        } catch (SQLException e) {
            System.out.println("‚ùå Erro ao listar consultas: " + e.getMessage());
        }

        return lista;
    }

    // Buscar por ID
    public Consulta buscarPorId(int idBusca) {
        String sql = "SELECT * FROM Consulta WHERE id_Consulta = ?";
        Consulta consulta = null;

        try (Connection conn = Conexao.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, idBusca);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                String data = rs.getString("data_Consulta");
                LocalTime hora = rs.getTime("hora_Consulta").toLocalTime();              
                int atendente = rs.getInt("matricula_Atendente");
                String medico =rs.getString("crm_Medico");
                String paciente = rs.getString("cpf_Paciente");


                consulta = new Consulta(data, hora, atendente, medico, paciente);
            }

        } catch (SQLException e) {
            System.out.println("Erro ao buscar consulta: " + e.getMessage());
        }

        return consulta;
    }

    public void listarConsultasCompletas() {
        String sql = "SELECT * FROM vw_Consultas_Completas";

        try (Connection conn = Conexao.conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("===== Consultas =====");
            while (rs.next()) {
                int idConsulta = rs.getInt("id_consulta");
                String dataConsulta = rs.getString("data_consulta");
                String horarioConsulta = rs.getString("horario_consulta");
                String nomePaciente = rs.getString("nome_paciente");
                String nomeMedico = rs.getString("nome_medico");

                System.out.println("ID: " + idConsulta +
                                   " | Data: " + dataConsulta +
                                   " | Hor·rio: " + horarioConsulta +
                                   " | Paciente: " + nomePaciente +
                                   " | MÈdico: " + nomeMedico);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public void inserirConsultaViaProcedure(Consulta consulta) {
        String sql = "{ call sp_inserir_consulta(?, ?, ?, ?) }";

        try (Connection conn = Conexao.conectar();
             CallableStatement stmt = conn.prepareCall(sql)) {

            // Convertendo String para LocalDate
            LocalDate data = LocalDate.parse(consulta.getDataConsulta());
            LocalTime hora = consulta.getHoraConsulta();

            stmt.setDate(1, Date.valueOf(data));                           // data_Consulta
            stmt.setTime(2, Time.valueOf(hora));                           // horario_Consulta
            stmt.setString(3, consulta.getCrmMedicoConsulta());              // crm_medico
            stmt.setString(4, consulta.getCpfPacienteConsulta());            // cpf_paciente

            stmt.execute();
            System.out.println("Consulta inserida com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao inserir consulta: " + e.getMessage());
        }
    }

    
    public void finalizarConsulta(String descricao, int idConsulta) {
        String sql = "{ call sp_inserir_receita(?, ?) }";

        try (Connection conn = Conexao.conectar();
             CallableStatement stmt = conn.prepareCall(sql)) {

            stmt.setString(1, descricao);
            stmt.setInt(2, idConsulta);

            stmt.execute();
            System.out.println("Consulta finalizada com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao finalizar consulta: " + e.getMessage());
        }
    }
    
    public int totalConsultasPorMedico(String crmMedico) {
        int total = 0;
        String sql = "SELECT fn_TotalConsultasMedico(?)";

        try (Connection conn = Conexao.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, crmMedico);

            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    total = rs.getInt(1);
                }
            }

        } catch (SQLException e) {
            System.out.println("Erro ao buscar total de consultas: " + e.getMessage());
        }

        return total;
    }
    
    // Atualizar
    public void atualizar(Consulta consulta) {
        String sql = "UPDATE Consulta SET data_Consulta = ?, horario_Consulta = ?, matricula_Atendente = ?, crm_Medico = ?, cpf_Paciente = ? WHERE id_Consulta = ?";

        try (Connection conn = Conexao.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, consulta.getDataConsulta());
            stmt.setTime(2, Time.valueOf(consulta.getHoraConsulta()));
            stmt.setInt(3, consulta.getMatriculaAtendenteConsulta());
            stmt.setString(4, consulta.getCrmMedicoConsulta());
            stmt.setString(5, consulta.getCpfPacienteConsulta());
            stmt.setInt(6, consulta.getIdConsulta());

            stmt.executeUpdate();

            System.out.println("Consulta atualizada com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao atualizar consulta: " + e.getMessage());
        }
    }

    // Deletar
    public void deletar(int id) {
        String sql = "DELETE FROM Consulta WHERE id_Consulta = ?";

        try (Connection conn = Conexao.conectar();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            stmt.executeUpdate();

            System.out.println("Consulta removida com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao deletar consulta: " + e.getMessage());
        }
    }
}
