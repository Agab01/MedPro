package medPro.DAO;

import medPro.database.Conexao;
import medPro.model.Paciente;
import medPro.model.Sexo;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class PacienteDAO {

	    // Inserir novo paciente
	    public void salvar(Paciente paciente) {
	        String sql = "INSERT INTO Paciente (cpf_Paciente, nome_Paciente, idade_Paciente, sexo_Paciente, telefone_Paciente, email_Paciente) VALUES (?, ?, ?, ?, ?, ?)";

	        try (Connection conn = Conexao.conectar();
	             PreparedStatement stmt = conn.prepareStatement(sql)) {

	            stmt.setString(1, paciente.getCpfPaciente());
	            stmt.setString(2, paciente.getNomePaciente());
	            stmt.setInt(3, paciente.getIdadePaciente());
	            stmt.setString(4, paciente.getSexoPaciente().toString()); 
	            stmt.setString(5, paciente.getTelefonePaciente());
	            stmt.setString(6, paciente.getEmailPaciente());

	            stmt.executeUpdate();
	            System.out.println(" Paciente inserido com sucesso!");
	        } catch (SQLException e) {
	            System.out.println(" Erro ao inserir paciente: " + e.getMessage());
	        }
	    }

	    // Listar todos os pacientes
	    public List<Paciente> listarTodos() {
	        List<Paciente> lista = new ArrayList<>();
	        String sql = "SELECT * FROM Paciente";

	        try (Connection conn = Conexao.conectar();
	             Statement stmt = conn.createStatement();
	             ResultSet rs = stmt.executeQuery(sql)) {

	            while (rs.next()) {
	                String cpf = rs.getString("cpf_Paciente");
	                String nome = rs.getString("nome_Paciente");
	                int idade = rs.getInt("idade_Paciente");
	                Sexo sexo = Sexo.valueOf(rs.getString("sexo_Paciente"));
	                String telefone = rs.getString("telefone_Paciente");
	                String email = rs.getString("email_Paciente");

	                Paciente p = new Paciente(cpf, nome, idade, sexo, telefone, email);
	                lista.add(p);
	            }

	        } catch (SQLException e) {
	            System.out.println(" Erro ao listar pacientes: " + e.getMessage());
	        }

	        return lista;
	    }

	    // Buscar paciente por CPF
	    public Paciente buscarPorCpf(String cpf) {
	        String sql = "SELECT * FROM Paciente WHERE cpf_Paciente = ?";
	        Paciente paciente = null;

	        try (Connection conn = Conexao.conectar();
	             PreparedStatement stmt = conn.prepareStatement(sql)) {

	            stmt.setString(1, cpf);
	            ResultSet rs = stmt.executeQuery();

	            if (rs.next()) {
	                String nome = rs.getString("nome_Paciente");
	                int idade = rs.getInt("idade_Paciente");
	                Sexo sexo = Sexo.valueOf(rs.getString("sexo_Paciente"));
	                String telefone = rs.getString("telefone_Paciente");
	                String email = rs.getString("email_Paciente");

	                paciente = new Paciente(cpf, nome, idade, sexo, telefone, email);
	            }

	        } catch (SQLException e) {
	            System.out.println("â Erro ao buscar paciente: " + e.getMessage());
	        }

	        return paciente;
	    }

	    // Atualizar paciente
	    public void atualizar(Paciente paciente) {
	        String sql = "UPDATE Paciente SET nome_Paciente = ?, idade_Paciente = ?, sexo_Paciente = ?, telefone_Paciente = ?, email_Paciente = ? WHERE cpf_Paciente = ?";

	        try (Connection conn = Conexao.conectar();
	             PreparedStatement stmt = conn.prepareStatement(sql)) {

	            stmt.setString(1, paciente.getNomePaciente());
	            stmt.setInt(2, paciente.getIdadePaciente());
	            stmt.setString(3, paciente.getSexoPaciente().toString());
	            stmt.setString(4, paciente.getTelefonePaciente());
	            stmt.setString(5, paciente.getEmailPaciente());
	            stmt.setString(6, paciente.getCpfPaciente());

	            stmt.executeUpdate();
	            System.out.println(" Paciente atualizado com sucesso!");
	        } catch (SQLException e) {
	            System.out.println(" Erro ao atualizar paciente: " + e.getMessage());
	        }
	    }

	    // Deletar paciente
	    public void deletar(String cpf) {
	        String sql = "DELETE FROM Paciente WHERE cpf_Paciente = ?";

	        try (Connection conn = Conexao.conectar();
	             PreparedStatement stmt = conn.prepareStatement(sql)) {

	            stmt.setString(1, cpf);
	            stmt.executeUpdate();
	            System.out.println(" Paciente removido com sucesso!");
	        } catch (SQLException e) {
	            System.out.println(" Erro ao remover paciente: " + e.getMessage());
	        }
	    }
	}



